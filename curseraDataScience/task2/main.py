#Задание внизу
import numpy as np 
import scipy.linalg as scli
import matplotlib.pyplot as plt

#Рассматриваемая функция имеет вид
def getf(x):
    return np.sin(x/5.0)*np.exp(x/10.0) + 5*np.exp(-x/2.0)

#Многочлен, аппроксимирующий функцию    
def getFapprox(w0,w1, w2, w3, x):
    return w0 + w1*x + w2*x*x + w3*x*x*x

A = np.array([[1., 1., 1., 1.],[1.0, 4., 16., 64], [1., 10., 100., 1000], [1., 15., 225., 3375]])
b = np.array([getf(1.), getf(4.), getf(10.), getf(15.)])
coefs = scli.solve(A,b)
x = range(1, 16)
f0 =  [getFapprox(coefs[0],coefs[1], coefs[2], coefs[3], a) for a in x]
plt.plot(x, f0)
f = [getf(a) for a in x]
plt.plot(x, f)
plt.show()

# аппроксимация функции
# Рассмотрим сложную математическую функцию на отрезке [1, 15]:

# f(x) = sin(x / 5) * exp(x / 10) + 5 * exp(-x / 2)


# Она может описывать, например, зависимость оценок, которые выставляют определенному сорту вина эксперты, в зависимости от возраста этого вина. По сути, задача машинного обучения состоит в том, чтобы приблизить сложную зависимость с помощью функции из определенного семейства. В этом задании мы будем приближать указанную функцию с помощью многочленов.

# Как известно, многочлен степени n (то есть w_0 + w_1 x + w_2 x^2 + ... + w_n x^n) однозначно определяется любыми n + 1 различными точками, через которые он проходит. Это значит, что его коэффициенты w_0, ... w_n можно определить из следующей системы линейных уравнений:


# где через x_1, ..., x_n, x_{n+1} обозначены точки, через которые проходит многочлен, а через f(x_1), ..., f(x_n), f(x_{n+1}) — значения, которые он должен принимать в этих точках.

# Воспользуемся описанным свойством, и будем находить приближение функции многочленом, решая систему линейных уравнений.

# Сформируйте систему линейных уравнений (то есть задайте матрицу коэффициентов A и свободный вектор b) для многочлена первой степени, который должен совпадать с функцией f в точках 1 и 15. Решите данную систему с помощью функции scipy.linalg.solve. Нарисуйте функцию f и полученный многочлен. Хорошо ли он приближает исходную функцию?
# Повторите те же шаги для многочлена второй степени, который совпадает с функцией f в точках 1, 8 и 15. Улучшилось ли качество аппроксимации?
# Повторите те же шаги для многочлена третьей степени, который совпадает с функцией f в точках 1, 4, 10 и 15. Хорошо ли он аппроксимирует функцию? Коэффициенты данного многочлена (четыре числа в следующем порядке: w_0, w_1, w_2, w_3) являются ответом на задачу.